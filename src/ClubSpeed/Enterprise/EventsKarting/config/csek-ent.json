{
    "additionalProperties": true,
    "name": "ClubSpeed Events Karting Enterprise API",
    "operations": {
        "_withAdditionalJSONParameters": {
            "additionalParameters": {
                "location": "json"
            }
        },
        "_withAdditionalQueryParameters": {
            "additionalParameters": {
                "location": "query"
            }
        },
        "getVersion": {
            "httpMethod": "GET",
            "description": "Get Club Speed version",
            "uri": "version/current",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "getApiVersion": {
            "httpMethod": "GET",
            "description": "Get API version",
            "uri": "version/api",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "getOSVersion": {
            "httpMethod": "GET",
            "description": "Get OS version",
            "uri": "version/os",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "getSQLVersion": {
            "httpMethod": "GET",
            "description": "Get SQL version",
            "uri": "version/sql",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "getSettings": {
            "httpMethod": "GET",
            "description": "Get all settings of a group",
            "uri": "settings/get?group={group}",
            "responseModel": "getResponse",
            "parameters": {
                "group": {
                    "required": true,
                    "location": "query"
                }
            }
        },
        "getSetting": {
            "httpMethod": "GET",
            "description": "Get individual setting",
            "uri": "settings/get?group={group}",
            "responseModel": "getResponse",
            "parameters": {
                "group": {
                    "required": true,
                    "location": "query"
                },
                "setting": {
                    "required": true,
                    "location": "query"
                }
            }
        },
        "getKioskSettings": {
            "httpMethod": "GET",
            "description": "Get Kiosk settings",
            "uri": "settings/get?group={group}",
            "responseModel": "getResponse",
            "parameters": {
                "group": {
                    "default": "kiosk",
                    "static": true,
                    "location": "query"
                }
            }
        },
        "getAppImages": {
            "httpMethod": "GET",
            "description": "Retrieve images by app",
            "uri": "/settings/getImages?app={app}",
            "responseModel": "getResponse",
            "parameters": {
                "app": {
                    "location": "query"
                }
            }
        },
        "getTracks": {
            "httpMethod": "GET",
            "description": "Get SQL version",
            "uri": "tracks/index",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "getChannelConfig": {
            "httpMethod": "GET",
            "description": "Get Club Speed channel configuration",
            "uri": "channel/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "testUserLogin": {
            "httpMethod": "GET",
            "description": "Attempt to login a user",
            "uri": "users/login?username={}&password={}",
            "responseModel": "getResponse",
            "parameters": {
                "username": {
                    "location": "query",
                    "required": true
                },
                "password": {
                    "location": "query",
                    "required": true
                }
            }
        },
        "testAdminUserLogin": {
            "httpMethod": "GET",
            "description": "Attempt to login an admin user",
            "uri": "users/login",
            "responseModel": "getResponse",
            "parameters": {
                "username": {
                    "location": "query",
                    "required": true
                },
                "password": {
                    "location": "query",
                    "required": true
                },
                "is_admin": {
                    "location": "query",
                    "default": 1,
                    "static": true
                }
            }
        },
        "getBooking": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Bookings",
            "uri": "booking/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createBooking": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Booking",
            "uri": "booking",
            "responseModel": "getResponse",
            "parameters": {
                "heat": {
                    "sentAs": "heatId",
                    "location": "json",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                },
                "product": {
                    "sentAs": "productsId",
                    "location": "json",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                },
                "public": {
                    "sentAs": "isPublic",
                    "location": "json",
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "quantity": {
                    "sentAs": "quantityTotal",
                    "location": "json",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "updateBooking": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Booking",
            "uri": "booking/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                },
                "heat": {
                    "sentAs": "heatId",
                    "location": "json",
                    "type": [
                        "integer",
                        "string"
                    ]
                },
                "product": {
                    "sentAs": "productsId",
                    "location": "json",
                    "type": [
                        "integer",
                        "string"
                    ]
                },
                "public": {
                    "sentAs": "isPublic",
                    "location": "json",
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "quantity": {
                    "sentAs": "quantityTotal",
                    "location": "json",
                    "type": [
                        "integer",
                        "string"
                    ]
                }
            }
        },
        "deleteBooking": {
            "httpMethod": "DELETE",
            "description": "Delete Bookings",
            "uri": "booking/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getBookingCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Bookings count",
            "uri": "booking/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getBookingAvailability": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get all Bookings",
            "uri": "bookingAvailability",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "getCheckDetails": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get CheckDetails",
            "uri": "checkDetails/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createCheckDetails": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create CheckDetails",
            "uri": "checkDetails",
            "responseModel": "fullResponse",
            "parameters": {}
        },
        "updateCheckDetails": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update CheckDetails",
            "uri": "checkDetails/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteCheckDetails": {
            "httpMethod": "DELETE",
            "description": "Delete CheckDetails",
            "uri": "checkDetails/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getCheckDetailsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get CheckDetails count",
            "uri": "checkDetails/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getChecks": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Checks",
            "uri": "checks/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createChecks": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Checks",
            "uri": "checks",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateChecks": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Checks",
            "uri": "checks/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteCheck": {
            "httpMethod": "POST",
            "description": "Void Check",
            "uri": "checks/{id}/void",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getChecksCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Checks count",
            "uri": "checks/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "finalizeCheck": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Finalize Check",
            "uri": "checks/{id}/finalize",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                },
                "sendCustomerReceiptEmail": {
                    "type": "boolean",
                    "location": "json",
                    "required": false
                },
                "details": {
                    "type": "array",
                    "location": "json",
                    "required": false,
                    "items": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "checkDetailId": {
                                "required": true
                            }
                        }
                    }
                }
            }
        },
        "getCheckTotals": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get CheckTotals",
            "uri": "checkTotals/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createCheckTotals": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create CheckTotals",
            "uri": "checkTotals",
            "responseModel": "getResponse",
            "parameters": {
                "checks": {
                    "location": "json",
                    "type": "array",
                    "required": true,
                    "items": {
                        "type": "object",
                        "properties": {
                            "customerId": {
                                "required": true
                            },
                            "checkDiscountId": {},
                            "userId": {},
                            "details": {
                                "type": "array",
                                "required": true,
                                "items": {
                                    "productId": {
                                        "required": true
                                    },
                                    "qty": {
                                        "required": true
                                    },
                                    "checkDetailDiscountId": {
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "calculateCheckTotals": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create CheckTotals",
            "uri": "checkTotals/virtual",
            "responseModel": "getResponse",
            "parameters": {
                "checks": {
                    "location": "json",
                    "type": "array",
                    "required": true,
                    "items": {
                        "type": "object",
                        "properties": {
                            "customerId": {
                                "required": true
                            },
                            "checkDiscountId": {},
                            "userId": {},
                            "details": {
                                "type": "array",
                                "required": true,
                                "items": {
                                    "productId": {
                                        "required": true
                                    },
                                    "qty": {
                                        "required": true
                                    },
                                    "checkDetailDiscountId": {
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "getCheckTotalsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get CheckTotals count",
            "uri": "checkTotals/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getCustomers": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Customers",
            "uri": "customers/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createCustomers": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Customers",
            "uri": "customers",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateCustomers": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Customers",
            "uri": "customers/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteCustomers": {
            "httpMethod": "DELETE",
            "description": "Delete Customers",
            "uri": "customers/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getCustomersCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Customers count",
            "uri": "customers/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getDiscountType": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get DiscountType",
            "uri": "discountType/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createDiscountType": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create DiscountType",
            "uri": "discountType",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateDiscountType": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update DiscountType",
            "uri": "discountType/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteDiscountType": {
            "httpMethod": "DELETE",
            "description": "Delete DiscountType",
            "uri": "discountType/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getDiscountTypeCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get DiscountTypes count",
            "uri": "discountType/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "__eventHeatDetails": {
            "extends": "_withAdditionalQueryParameters",
            "uri": "eventHeatDetails",
            "responseModel": "getResponse"
        },
        "__eventHeatDetail": {
            "extends": "_withAdditionalQueryParameters",
            "uri": "eventHeatDetails/{customerId}/{eventId}",
            "responseModel": "getResponse",
            "parameters": {
                "customerId": {
                    "location": "uri",
                    "required": true
                },
                "eventId": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventHeatDetail": {
            "extends": "__eventHeatDetail",
            "httpMethod": "GET",
            "description": "Get Single Event Heat Details"
        },
        "getEventHeatDetails": {
            "extends": "__eventHeatDetails",
            "httpMethod": "GET",
            "description": "Get Event Heat Details"
        },
        "createEventHeatDetails": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventHeatDetails",
            "uri": "eventHeatDetails",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateEventHeatDetail": {
            "extends": "__eventHeatDetail",
            "httpMethod": "PUT",
            "description": "Update Single Event Heat Details"
        },
        "updateEventHeatDetails": {
            "extends": "__eventHeatDetails",
            "httpMethod": "PUT",
            "description": "Update Event Heat Details"
        },
        "deleteEventHeatDetail": {
            "extends": "__eventHeatDetail",
            "httpMethod": "DELETE",
            "description": "Delete Single Event Heat Details"
        },
        "deleteEventHeatDetails": {
            "extends": "deleteEventHeatDetail"
        },
        "getEventHeatDetailsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventHeatDetails count",
            "uri": "eventHeatDetails/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getEventHeatTypes": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventHeatTypes",
            "uri": "eventHeatTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEventHeatTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventHeatTypes",
            "uri": "eventHeatTypes",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateEventHeatTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventHeatTypes",
            "uri": "eventHeatTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteEventHeatTypes": {
            "httpMethod": "DELETE",
            "description": "Delete EventHeatTypes",
            "uri": "eventHeatTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventHeatTypesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventHeatTypes count",
            "uri": "eventHeatTypes/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getEventReservationLinks": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventReservationLinks",
            "uri": "eventReservationLinks/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEventReservationLinks": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventReservationLinks",
            "uri": "eventReservationLinks",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "updateEventReservationLinks": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventReservationLinks",
            "uri": "eventReservationLinks/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteEventReservationLinks": {
            "httpMethod": "DELETE",
            "description": "Delete EventReservationLinks",
            "uri": "eventReservationLinks/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventReservationLinksCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventReservationLinks count",
            "uri": "eventReservationLinks/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "createEventReservationHeatMain": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventReservationHeatMain",
            "uri": "EventReservationHeatMain",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "deleteEventReservationHeatMain": {
            "httpMethod": "POST",
            "description": "Delete EventReservationHeatMain",
            "uri": "EventReservationHeatMainDelete",
            "responseModel": "getResponse",
            "parameters": {
                "EventReservationHeatMainID": {
                    "required": true,
                    "type": [
                        "integer",
                        "string"
                    ]
                }
            }
        },
        "getEventReservations": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventReservations",
            "uri": "eventReservations/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEventReservations": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventReservations",
            "uri": "eventReservations",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "updateEventReservations": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventReservations",
            "uri": "eventReservations/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "updateEventReservationStatus": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventReservation status",
            "uri": "eventReservations/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                },
                "statusId": {
                    "sentAs": "status",
                    "location": "json",
                    "type": [
                        "integer",
                        "string"
                    ]
                }
            }
        },
        "deleteEventReservations": {
            "httpMethod": "DELETE",
            "description": "Delete EventReservations",
            "uri": "eventReservations/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventReservationsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventReservations count",
            "uri": "eventReservations/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getEventReservationTypes": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventReservationTypes",
            "uri": "eventReservationTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEventReservationTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventReservationTypes",
            "uri": "eventReservationTypes",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateEventReservationTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventReservationTypes",
            "uri": "eventReservationTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteEventReservationTypes": {
            "httpMethod": "DELETE",
            "description": "Delete EventReservationTypes",
            "uri": "eventReservationTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventReservationTypesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventReservationTypes count",
            "uri": "eventReservationTypes/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getEventRounds": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventRounds",
            "uri": "eventRounds/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEventRounds": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventRounds",
            "uri": "eventRounds",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateEventRounds": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventRounds",
            "uri": "eventRounds/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteEventRounds": {
            "httpMethod": "DELETE",
            "description": "Delete EventRounds",
            "uri": "eventRounds/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventRoundsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventRounds count",
            "uri": "eventRounds/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getEvents": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Events",
            "uri": "events/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEvents": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Events",
            "uri": "events",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateEvents": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Events",
            "uri": "events/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteEvents": {
            "httpMethod": "DELETE",
            "description": "Delete Events",
            "uri": "events/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Events count",
            "uri": "events/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getEventStatuses": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventStatuses",
            "uri": "eventStatuses/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEventStatuses": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventStatuses",
            "uri": "eventStatuses",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateEventStatuses": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventStatuses",
            "uri": "eventStatuses/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteEventStatuses": {
            "httpMethod": "DELETE",
            "description": "Delete EventStatuses",
            "uri": "eventStatuses/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventStatusesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventStatuses count",
            "uri": "eventStatuses/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getEventTasks": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventTasks",
            "uri": "eventTasks/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEventTasks": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventTasks",
            "uri": "eventTasks",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateEventTasks": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventTasks",
            "uri": "eventTasks/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteEventTasks": {
            "httpMethod": "DELETE",
            "description": "Delete EventTasks",
            "uri": "eventTasks/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventTasksCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventTasks count",
            "uri": "eventTasks/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getEventTaskTypes": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventTaskTypes",
            "uri": "eventTaskTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEventTaskTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventTaskTypes",
            "uri": "eventTaskTypes",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateEventTaskTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventTaskTypes",
            "uri": "eventTaskTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteEventTaskTypes": {
            "httpMethod": "DELETE",
            "description": "Delete EventTaskTypes",
            "uri": "eventTaskTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventTaskTypesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventTaskTypes count",
            "uri": "eventTaskTypes/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getEventTypes": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventTypes",
            "uri": "eventTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createEventTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create EventTypes",
            "uri": "eventTypes",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateEventTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update EventTypes",
            "uri": "eventTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteEventTypes": {
            "httpMethod": "DELETE",
            "description": "Delete EventTypes",
            "uri": "eventTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getEventTypesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get EventTypes count",
            "uri": "eventTypes/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getGiftCardHistory": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get GiftCardHistory",
            "uri": "giftCardHistory/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "getGiftCardsHistory": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get GiftCardsHistory",
            "uri": "giftCardHistory",
            "responseModel": "getResponse",
            "parameters": {
                "where": {
                    "location": "uri"
                }
            }
        },
        "createGiftCardHistory": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create GiftCardHistory",
            "uri": "giftCardHistory",
            "responseModel": "responseBody",
            "additionalParameters": {
                "location": "json"
            }
        },
        "updateGiftCardHistory": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update GiftCardHistory",
            "uri": "giftCardHistory/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteGiftCardHistory": {
            "httpMethod": "DELETE",
            "description": "Delete GiftCardHistory",
            "uri": "giftCardHistory/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getGiftCardHistoryCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get GiftCardHistorys count",
            "uri": "giftCardHistory/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "__heatDetails": {
            "extends": "_withAdditionalQueryParameters",
            "uri": "heatDetails",
            "responseModel": "getResponse"
        },
        "__heatDetail": {
            "extends": "_withAdditionalQueryParameters",
            "uri": "heatDetails/{heatId}/{customerId}",
            "responseModel": "getResponse",
            "parameters": {
                "customerId": {
                    "location": "uri",
                    "required": true
                },
                "heatId": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getHeatDetail": {
            "extends": "__heatDetail",
            "httpMethod": "GET",
            "description": "Get Single Heat Details"
        },
        "getHeatDetails": {
            "extends": "__heatDetails",
            "httpMethod": "GET",
            "description": "Get Heat Details"
        },

        "createHeatDetails": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create HeatDetails",
            "uri": "heatDetails",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateHeatDetail": {
            "extends": "__heatDetail",
            "httpMethod": "PUT",
            "description": "Update Single Heat Details"
        },
        "updateHeatDetails": {
            "extends": "__heatDetails",
            "httpMethod": "PUT",
            "description": "Update Heat Details"
        },
        "deleteHeatDetail": {
            "extends": "__heatDetail",
            "httpMethod": "DELETE",
            "description": "Delete Heat Details"
        },
        "deleteHeatDetails": {
            "extends": "deleteHeatDetail"
        },

        "getHeatDetailsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get HeatDetails count",
            "uri": "heatDetails/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getHeatMain": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get HeatMain",
            "uri": "heatMain/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "getHeatsMain": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get HeatMain",
            "uri": "heatMain",
            "responseModel": "getResponse"
        },
        "createHeatMain": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create HeatMain",
            "uri": "heatMain",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "updateHeatMain": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update HeatMain",
            "uri": "heatMain/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteHeatMain": {
            "httpMethod": "DELETE",
            "description": "Delete HeatMain",
            "uri": "heatMain/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getHeatMainCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get HeatMains count",
            "uri": "heatMain/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getHeatTypes": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get HeatTypes",
            "uri": "heatTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createHeatTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create HeatTypes",
            "uri": "heatTypes",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateHeatTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update HeatTypes",
            "uri": "heatTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteHeatTypes": {
            "httpMethod": "DELETE",
            "description": "Delete HeatTypes",
            "uri": "heatTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getHeatTypesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get HeatTypes count",
            "uri": "heatTypes/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "__memberships": {
            "extends": "_withAdditionalQueryParameters",
            "uri": "memberships",
            "responseModel": "getResponse"
        },
        "__membership": {
            "extends": "_withAdditionalQueryParameters",
            "uri": "memberships/{customerId}/{membershipTypeId}",
            "responseModel": "getResponse",
            "parameters": {
                "customerId": {
                    "location": "uri",
                    "required": true
                },
                "membershipTypeId": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getMembership": {
            "extends": "__membership",
            "httpMethod": "GET",
            "description": "Get Single Membership"
        },
        "getMemberships": {
            "extends": "__memberships",
            "httpMethod": "GET",
            "description": "Get Memberships"
        },
        "createMemberships": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Memberships",
            "uri": "memberships",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateMembership": {
            "extends": "__membership",
            "httpMethod": "PUT",
            "description": "Update Single Membership"
        },
        "updateMemberships": {
            "extends": "__memberships",
            "httpMethod": "PUT",
            "description": "Update Memberships"
        },
        "deleteMembership": {
            "extends": "__membership",
            "httpMethod": "DELETE",
            "description": "Delete Single Membership"
        },
        "deleteMemberships": {
            "extends": "deleteMembership"
        },
        "getMembershipsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Memberships count",
            "uri": "memberships/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getMembershipTypes": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get MembershipTypes",
            "uri": "membershipTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createMembershipTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create MembershipTypes",
            "uri": "membershipTypes",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateMembershipTypes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update MembershipTypes",
            "uri": "membershipTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteMembershipTypes": {
            "httpMethod": "DELETE",
            "description": "Delete MembershipTypes",
            "uri": "membershipTypes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getMembershipTypesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get MembershipTypes count",
            "uri": "membershipTypes/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getOmnipayVendors": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "List Vendors",
            "uri": "omnipay/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "acceptOmnipayPayment": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Accept Payment (omnipay)",
            "uri": "omnipay/purchase",
            "responseModel": "getResponse",
            "parameters": {
                "name": {
                    "location": "json",
                    "type": [
                        "string"
                    ],
                    "required": true
                },
                "amount": {
                    "location": "json",
                    "required": true
                },
                "transactionId": {
                    "location": "json",
                    "required": true
                },
                "currency": {
                    "location": "json"
                },
                "returnUrl": {
                    "location": "json"
                },
                "options": {
                    "location": "json",
                    "required": true,
                    "type": "object"
                },
                "card": {
                    "location": "json",
                    "required": true,
                    "type": "object"
                }
            }
        },
        "completeOmnipayPayment": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Complete Payment (omnipay)",
            "uri": "omnipay/complete",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "generateResetToken": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Generate Reset Token",
            "uri": "passwords",
            "responseModel": "getResponse",
            "parameters": {
                "email": {
                    "location": "json",
                    "required": true
                },
                "url": {
                    "location": "json"
                }
            }
        },
        "consumeResetToken": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Consume Reset Token",
            "uri": "passwords",
            "responseModel": "getResponse",
            "parameters": {
                "token": {
                    "location": "json",
                    "required": true
                },
                "password": {
                    "location": "json",
                    "required": true
                }
            }
        },
        "getPayments": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Payments",
            "uri": "payments/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createPayments": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Payments",
            "uri": "payments",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "updatePayments": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Payments",
            "uri": "payments/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deletePayments": {
            "httpMethod": "DELETE",
            "description": "Delete Payments",
            "uri": "payments/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getPaymentsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Payments count",
            "uri": "payments/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "processPayment": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Process Payment",
            "uri": "processPayment",
            "responseModel": "getResponse",
            "parameters": {
                "name": {
                    "location": "json",
                    "type": [
                        "string"
                    ],
                    "required": true
                },
                "options": {
                    "location": "json",
                    "required": true,
                    "type": "object"
                },
                "check": {
                    "location": "json",
                    "required": true,
                    "type": "object",
                    "properties": {
                        "checkId": {
                            "required": true
                        },
                        "details": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "checkDetailId": {
                                    },
                                    "heatId": {
                                    }
                                }
                            }
                        }
                    }
                },
                "card": {
                    "location": "json",
                    "type": "object"
                }
            }
        },
        "updateProcessPayment": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update ProcessPayment",
            "uri": "processPayment/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteProcessPayment": {
            "httpMethod": "DELETE",
            "description": "Delete ProcessPayment",
            "uri": "processPayment/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getProcessPaymentCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get ProcessPayments count",
            "uri": "processPayment/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getProductClasses": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get ProductClasses",
            "uri": "productClasses/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createProductClasses": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create ProductClasses",
            "uri": "productClasses",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "updateProductClasses": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update ProductClasses",
            "uri": "productClasses/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteProductClasses": {
            "httpMethod": "DELETE",
            "description": "Delete ProductClasses",
            "uri": "productClasses/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getProductClassesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get ProductClasses count",
            "uri": "productClasses/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getProducts": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Products",
            "uri": "products/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createProducts": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Products",
            "uri": "products",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateProducts": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Products",
            "uri": "products/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteProducts": {
            "httpMethod": "DELETE",
            "description": "Delete Products",
            "uri": "products/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getProductsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Products count",
            "uri": "products/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getReservations": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Reservations",
            "uri": "reservations/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createReservations": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Reservations",
            "uri": "reservations",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateReservations": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Reservations",
            "uri": "reservations/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteReservations": {
            "httpMethod": "DELETE",
            "description": "Delete Reservations",
            "uri": "reservations/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getReservationsCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Reservations count",
            "uri": "reservations/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getSources": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Sources",
            "uri": "sources/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createSources": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Sources",
            "uri": "sources",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateSources": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Sources",
            "uri": "sources/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteSources": {
            "httpMethod": "DELETE",
            "description": "Delete Sources",
            "uri": "sources/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getSourcesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Sources count",
            "uri": "sources/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getTaxes": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Taxes",
            "uri": "taxes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createTaxes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Taxes",
            "uri": "taxes",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateTaxes": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Taxes",
            "uri": "taxes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteTaxes": {
            "httpMethod": "DELETE",
            "description": "Delete Taxes",
            "uri": "taxes/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getTaxesCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Taxes count",
            "uri": "taxes/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "getUsers": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Users",
            "uri": "users/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri"
                }
            }
        },
        "createUsers": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create Users",
            "uri": "users",
            "responseModel": "getResponse",
            "parameters": {
            }
        },
        "updateUsers": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "PUT",
            "description": "Update Users",
            "uri": "users/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "required": true
                }
            }
        },
        "deleteUsers": {
            "httpMethod": "DELETE",
            "description": "Delete Users",
            "uri": "users/{id}",
            "responseModel": "getResponse",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            }
        },
        "getUsersCount": {
            "extends": "_withAdditionalQueryParameters",
            "httpMethod": "GET",
            "description": "Get Users count",
            "uri": "users/count",
            "responseModel": "fullResponse",
            "parameters": {
            }
        },
        "createRacer": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Create as racer",
            "uri": "racers/create",
            "responseModel": "getResponse",
            "parameters": {
                "racername": {
                    "location": "json"
                },
                "email": {
                    "location": "json"
                },
                "password": {
                    "location": "json"
                },
                "donotemail": {
                    "location": "json"
                },
                "firstname": {
                    "location": "json"
                },
                "lastname": {
                    "location": "json"
                },
                "birthdate": {
                    "location": "json"
                },
                "gender": {
                    "location": "json"
                },
                "mobilephone": {
                    "location": "json"
                },
                "address": {
                    "sentAs": "Address",
                    "location": "json"
                },
                "address2": {
                    "sentAs": "Address2",
                    "location": "json"
                },
                "city": {
                    "sentAs": "City",
                    "location": "json"
                },
                "country": {
                    "sentAs": "Country",
                    "location": "json"
                },
                "howdidyouhearaboutus": {
                    "location": "json"
                },
                "state": {
                    "sentAs": "State",
                    "location": "json"
                },
                "zip": {
                    "sentAs": "Zip",
                    "location": "json"
                }
            }
        },
        "login": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Login as racer",
            "uri": "racers/login",
            "responseModel": "getResponse",
            "parameters": {
                "username": {
                    "location": "json",
                    "required": true
                },
                "password": {
                    "location": "json",
                    "required": true
                }
            }
        },
        "loginFb": {
            "extends": "_withAdditionalJSONParameters",
            "httpMethod": "POST",
            "description": "Login as racer using Facebook",
            "uri": "racers/fb_login",
            "responseModel": "getResponse",
            "parameters": {
                "email": {
                    "location": "json"
                },
                "facebookId": {
                    "location": "json",
                    "required": true
                },
                "facebookToken": {
                    "location": "json"
                },
                "facebookAllowEmail": {
                    "location": "json"
                },
                "facebookAllowPost": {
                    "location": "json"
                },
                "facebookEnabled": {
                    "location": "json"
                },
                "facebookExpiresIn": {
                    "location": "json"
                },
                "racername": {
                    "location": "json"
                },
                "password": {
                    "location": "json"
                },
                "donotemail": {
                    "location": "json"
                },
                "firstname": {
                    "location": "json"
                },
                "lastname": {
                    "location": "json"
                },
                "birthdate": {
                    "location": "json"
                },
                "gender": {
                    "location": "json"
                },
                "mobilephone": {
                    "location": "json"
                },
                "address": {
                    "sentAs": "Address",
                    "location": "json"
                },
                "address2": {
                    "sentAs": "Address2",
                    "location": "json"
                },
                "city": {
                    "sentAs": "City",
                    "location": "json"
                },
                "country": {
                    "sentAs": "Country",
                    "location": "json"
                },
                "howdidyouhearaboutus": {
                    "location": "json"
                },
                "state": {
                    "sentAs": "State",
                    "location": "json"
                },
                "zip": {
                    "sentAs": "Zip",
                    "location": "json"
                }
            }
        }
    },
    "models": {
        "getResponse": {
            "type": "object",
            "additionalProperties": {
                "location": "json"
            }
        },
        "responseBody": {
            "type": "object",
            "additionalProperties": {
                "location": "body"
            }
        },
        "fullResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "location": "statusCode",
                    "type": "integer"
                },
                "reason": {
                    "location": "reasonPhrase",
                    "type": "string"
                },
                "header": {
                    "location": "header",
                    "type": "string"
                },
                "body": {
                    "location": "body",
                    "type": "string"
                }
            }
        }
    }
}